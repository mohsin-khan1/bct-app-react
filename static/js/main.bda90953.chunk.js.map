{"version":3,"sources":["components/ApiData.js","components/SocketData.js","components/ApiDataTabular.js","components/App.js","index.js"],"names":["ApiData","useState","data","setData","useEffect","mounted","fetch","then","res","json","console","log","plotXlabels","plot","x","plotYlabels","y","dataPts","bgColors","plotYDataObj","forEach","yLabel","i","label","backgroundColor","date","hasOwnProperty","push","plotYDataset","Object","values","labels","datasets","className","options","indexAxis","elements","bar","borderWidth","responsive","grouped","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","SocketData","cpuData","setCpuData","memoryData","setMemoryData","sensorData","setSensorData","loading","setLoading","socket","socketClient","on","memoryDataset","lidar","memory","available","total","borderColor","cpuDataset","cpu","motorRpm","sensor","motor_rpm","output","type","color","height","width","focusable","viewBox","aria-hidden","role","fill","d","ApiDataTabular","columns","setColumns","dataObj","dataArr","prop","scope","map","item","index","c","App","id","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","aria-haspopup","aria-labelledby","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bda90953.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nfunction ApiData() {\r\n  const [data, setData] = useState([]);\r\n  \r\n  const url = 'https://api.bluecitytechnology.com/s/smp/'\r\n\r\n  const options = {\r\n    indexAxis: 'y',\r\n    // Elements options apply to all of the options unless overridden in a dataset\r\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\r\n    elements: {\r\n      bar: {\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n    responsive: true,\r\n    grouped: true,\r\n    maintainAspectRatio: false,\r\n    // maintainAspectRatio: false,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    fetch(url).then(res => res.json())\r\n    .then(res => {\r\n      console.log('res', res)\r\n      const plotXlabels = res.plot.x\r\n      const plotYlabels = res.plot.y\r\n      const dataPts = res.data\r\n      \r\n      const bgColors = ['#FF4069', '#059BFF', '#22CFCF', '#5f27cd', '#222f3e']\r\n\r\n      // Preparing plotYDatasetObj\r\n      const plotYDataObj = {}\r\n      plotYlabels.forEach((yLabel, i) => {\r\n        plotYDataObj[yLabel] = {\r\n            label: yLabel,\r\n            data: [],\r\n            backgroundColor: bgColors[i]\r\n        }\r\n      })\r\n      console.log(\"plotYDataObj\", plotYDataObj);\r\n\r\n      plotXlabels.forEach((date, i) => {\r\n          for(const yLabel of plotYlabels) {\r\n              if(dataPts[date].hasOwnProperty(yLabel)) {\r\n                plotYDataObj[yLabel].data.push(dataPts[date][yLabel])  \r\n              } else {\r\n                plotYDataObj[yLabel].data.push(0)  \r\n              }\r\n          }\r\n      });\r\n\r\n      const plotYDataset = Object.values(plotYDataObj)\r\n      console.log('plotYDataset', plotYDataset)\r\n\r\n      if(mounted) {\r\n        setData({\r\n            labels: plotXlabels,\r\n            datasets: plotYDataset\r\n        })\r\n      }\r\n    })\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container-fluid data-container p-lg-5 mt-3\">\r\n      <h2>Api Data</h2>\r\n\r\n      <Bar data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApiData;\r\n","import React, { useState, useEffect } from 'react'\r\nimport socketClient  from \"socket.io-client\"\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\n\r\nconst SERVER = \"http://54.89.37.132:8000\";\r\n\r\n\r\nfunction SocketData() {\r\n  const [cpuData, setCpuData] = useState({});\r\n  const [memoryData, setMemoryData] = useState({});\r\n  const [sensorData, setSensorData] = useState({});\r\n  const [loading, setLoading] = useState(true)\r\n  const socket = socketClient (SERVER);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    socket.on('data', (data) => {\r\n        setLoading(false)\r\n        console.log('Socket data', data);\r\n        const memoryLabels = ['Available', 'Total']; \r\n        const memoryDataset = [\r\n            {\r\n              label: 'Memory',\r\n              data: [data.lidar.memory.available, data.lidar.memory.total],\r\n              backgroundColor: [\r\n                '#4BC0C0',\r\n                '#36A2EB'\r\n              ],\r\n              borderColor: [\r\n                '#10ac84',\r\n                '#0abde3',\r\n              ],\r\n              borderWidth: 1,\r\n            },\r\n          ]\r\n        const cpuLabels = ['1', '2']; \r\n        const cpuDataset = [\r\n            {\r\n              label: 'CPU',\r\n              data: [data.lidar.cpu['1'], data.lidar.cpu['2']],\r\n              backgroundColor: [\r\n                '#FFCD56',\r\n                '#36A2EB'\r\n              ],\r\n              borderColor: [\r\n                '#feca57',\r\n                '#0abde3',\r\n              ],\r\n              borderWidth: 1,\r\n            },\r\n          ]\r\n          if(mounted) {\r\n            setMemoryData({\r\n                labels: memoryLabels,\r\n                datasets: memoryDataset\r\n            })\r\n            setCpuData({\r\n                labels: cpuLabels,\r\n                datasets: cpuDataset\r\n            })\r\n            setSensorData({\r\n                motorRpm: data.sensor.motor_rpm,\r\n                output: data.sensor.output\r\n            })\r\n          }\r\n    });\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n        <div className=\"container vh-100 p-lg-5 mt-3\" >\r\n\r\n            <div className=\"container\">\r\n                { loading && \r\n                <>\r\n                <h2 className=\"mb-5\">Socket Data</h2> \r\n                <Loader\r\n                type=\"Oval\"\r\n                color=\"#00BFFF\"\r\n                height={300}\r\n                width={300}\r\n                // timeout={3000} //3 secs\r\n                />\r\n                </> }\r\n\r\n                { !loading &&\r\n                <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Doughnut data={cpuData} />\r\n                        <h4 className=\"text-center mt-2\">CPU</h4>\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-3\">\r\n                        <Pie data={memoryData} />\r\n                        <h4 className=\"text-center mt-2\">Memory</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"c-dashboardInfo col-lg-3 col-md-6\">\r\n                                <div className=\"wrap\">\r\n                                    <h4 className=\"heading heading5 hind-font medium-font-weight c-dashboardInfo__title\">Motor RPM<svg\r\n                                        className=\"MuiSvgIcon-root-19\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\r\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n                                        <path\r\n                                        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\">\r\n                                        </path>\r\n                                    </svg></h4><span className=\"hind-font caption-12 c-dashboardInfo__count\">{ sensorData.motorRpm }</span>\r\n                                </div>\r\n                    </div>\r\n                    <div className=\"c-dashboardInfo col-lg-3 col-md-6\">\r\n                                <div className=\"wrap\">\r\n                                    <h4 className=\"heading heading5 hind-font medium-font-weight c-dashboardInfo__title\">Output<svg\r\n                                        className=\"MuiSvgIcon-root-19\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\r\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n                                        <path\r\n                                        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\">\r\n                                        </path>\r\n                                    </svg></h4><span className=\"hind-font caption-12 c-dashboardInfo__count\">{ sensorData.output }</span>\r\n                                </div>\r\n                    </div>\r\n                </div>\r\n                </> }\r\n            </div>\r\n            \r\n\r\n\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SocketData;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nfunction ApiDataTabular() {\r\n  const [data, setData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  \r\n  const url = 'https://api.bluecitytechnology.com/s/smp/'\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    fetch(url).then(res => res.json())\r\n    .then(res => {\r\n      console.log('res', res)\r\n      const dataObj = res.data\r\n      let dataArr = []\r\n      for (const prop in dataObj) {\r\n        dataArr.push({...dataObj[prop], date: prop});\r\n      }\r\n      console.log('dataArr', dataArr)\r\n      \r\n      if(mounted) {\r\n        setData(dataArr)\r\n        setColumns(res.plot.y)\r\n      }\r\n    })\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container-fluid p-lg-5 mt-3\">\r\n      <h2>Api Data</h2>\r\n\r\n      <div className=\"table-responsive-sm\">\r\n        <table className=\"table table-bordered mt-4\">\r\n        <thead className=\"thead\">\r\n          <tr>\r\n            <th scope=\"col\">\r\n              Date\r\n            </th>\r\n            {\r\n              columns.map((item, index) => \r\n              <th key={index} scope=\"col\">\r\n                {item}\r\n              </th>\r\n              )\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            data.map((item, index) => \r\n            <tr key={index}>\r\n              <td>{item.date}</td>\r\n              {\r\n                columns.map((c, index) => \r\n                <td key={index}>\r\n                  {item.hasOwnProperty(c) ? item[c]: '0'}\r\n                </td>\r\n                )\r\n              }\r\n            </tr>\r\n            )\r\n          }\r\n        </tbody>\r\n        </table>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApiDataTabular;\r\n","import '../css/App.css';\nimport React, { useState, useEffect } from 'react'\nimport ApiData from './ApiData';\nimport SocketData from './SocketData';\nimport ApiDataTabular from './ApiDataTabular';\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    \n    <Router>\n\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary navbar-static-top\" id=\"sideNav\">\n          <a className=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">\n            <span className=\"d-block d-lg-none\">BCT</span>\n          </a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link js-scroll-trigger\" to=\"/socket-data\">Socket Data</Link>\n              </li>\n\n              <li className=\"nav-item dropdown\">\n              <Link className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Api Data\n              </Link>\n              <div className=\"dropdown-menu text-center\" aria-labelledby=\"navbarDropdown\">\n                <Link className=\"dropdown-item\" to=\"/api-data\">Visual</Link>\n                <Link className=\"dropdown-item\" to=\"/api-data-tabular\">Tabular</Link>\n              </div>\n              </li>\n\n            </ul>\n          </div>\n      </nav>\n\n      {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/api-data\">\n          <ApiData />\n        </Route>\n        <Route path=\"/socket-data\">\n          <SocketData />\n        </Route>\n        <Route path=\"/api-data-tabular\">\n          <ApiDataTabular />\n        </Route>\n        <Route path=\"/\">\n          <ApiData />\n        </Route>\n      </Switch>\n\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}